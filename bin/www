#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app').default
var debug = require('debug')('zabo-server:server')
var http = require('http')
var logger = require("../utils/logger").logger

process.env.NODE_ENV = process.env.NODE_ENV || "development"

/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || '6001')
app.set('port', port)

/**
 * Create HTTP server.
 */

var server = http.createServer(app)

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port)
server.on('error', onError)
server.on('listening', onListening)

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
	var port = parseInt(val, 10)

	if (isNaN(port)) {
		// named pipe
		return val
	}

	if (port >= 0) {
		// port number
		return port
	}

	return false
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
	if (error.syscall !== 'listen') {
		throw error
	}

	var bind = typeof port === 'string'
		? 'Pipe ' + port
		: 'Port ' + port

	// handle specific listen errors with friendly messages
	switch (error.code) {
		case 'EACCES':
			console.error(bind + ' requires elevated privileges')
			process.exit(1)
			break
		case 'EADDRINUSE':
			console.error(bind + ' is already in use')
			process.exit(1)
			break
		default:
			throw error
	}
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
	var addr = server.address()
	var bind = typeof addr === 'string'
		? 'pipe ' + addr
		: 'port ' + addr.port
	debug('Listening on ' + bind)

	const boldBlue = text => `\u001b[1m\u001b[34m${text}\u001b[39m\u001b[22m`

	const address = `http://localhost:${port}`

	// TODO: Reinforce this temporary log
	logger.info(`%%%%% [START] ENV - ${process.env.NODE_ENV} PORT - ${port} [END] %%%%%`)
	logger.info(`Server is running at ${boldBlue(`http://localhost:${port}/`)}`)
	logger.warn(`Server is running at ${boldBlue(`http://localhost:${port}/`)}`)
	logger.error(`Server is running at ${boldBlue(`http://localhost:${port}/`)}`)
	logger.warn(`Server is running at ${boldBlue(`http://localhost:${port}/`)}`)
	logger.info(`Server is running at ${boldBlue(`http://localhost:${port}/`)}`)

	console.info(`\nServer is running at ${boldBlue(address)}`)
	console.info(`================ ENV : %s =================\n`, process.env.NODE_ENV)
}
