version: "3"

services:
  zabo-server:
    container_name: zabo-server
    restart: always
    build:
      context: ..
      dockerfile: .docker/Dockerfile
    ports:
      - "${SERVER_PORT}:6001"
    depends_on:
      - zabo-mongo
      - zabo-redis
    links:
      - zabo-mongo
      - zabo-redis
    volumes:
      - zabo-server-log:/app/log
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - MINIMUM_LOG_LEVEL=info
      - SSO_CLIENT_ID=${SSO_CLIENT_ID}
      - SSO_SECRET=${SSO_SECRET}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - SESSION_SECRET=${SESSION_SECRET}
      - JWT_SECRET=${JWT_SECRET}
      - S3_BUCKET=${S3_BUCKET}
      - MONGODB_URL=mongodb://zabo-mongo:27017/zabo
      - REDIS_URL=redis://zabo-redis:6379
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}

  zabo-mongo:
    container_name: zabo-mongo
    restart: always
    image: mongo:4.4
    volumes:
      - zabo-mongo-data:/data/db

  zabo-redis:
    container_name: zabo-redis
    restart: always
    image: redis:7.0.4-alpine

  zabo-scheduler:
    container_name: zabo-scheduler
    restart: always
    build: 
      context: ..
      dockerfile: .scheduler/Dockerfile 
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_S3_DUMP_BUCKET_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_S3_DUMP_BUCKET_SECRET_ACCESS_KEY}
      - BUCKET=${AWS_S3_DUMP_BUCKET_NAME}
      - BACKUP_FOLDER=mongodb-dump/
      - MONGODB_HOST=zabo-mongo:27017
      - DB_STR=zabo
    volumes:
      - zabo-scheduler-log:/backup_log:rw

volumes:
  zabo-server-log:
    external: true
  zabo-mongo-data:
    external: true
  zabo-scheduler-log:
    external: true 
